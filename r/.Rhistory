library("mlr")
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
setwd("C:\\Users\\erudi\\PycharmProjects\\stock-evaluator\\r")
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
View(df)
?selectFeature
?selectFeatures
selectFeatures(l, t, rdesc, measures = c("acc"), control = ctrl, show.info = 1)
selectFeatures(l, t, rdesc, measures = acc, control = ctrl, show.info = 1)
?FeatSelControl
featctrl <- makeFeatSelControlExhaustive()
selectFeatures(l, t, rdesc, measures = acc, control = featctrl)
selectFeatures(l, t, rdesc, measures = acc, control = featctrl, show.info = TRUE)
generateFilterValuesData(t)
install.packages("randomForestSRC")
generateFilterValuesData(t)
filters <- generateFilterValuesData(t)
plotFilterValues(filters)
alpha_SAP <- read.csv("C:/Users/erudi/PycharmProjects/stock-evaluator/data/csv/alpha_SAP.csv", row.names=1)
View(alpha_SAP)
?generateThreshVsPerfData
generateThreshVsPerfData(p, measures = acc)
plotResiduals(p)
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
alpha_SAP$adj_close[1]
alpha_SAP$adj_close[2]
alpha_SAP$adj_close[0]
?normalizeFeatures
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
?as.factor
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
warnings()
df <- alpha_SAP
View(alpha_SAP)
df$Score <- 0
for(i in c(1, (nrow(df) - 1))) {
if(df$adj_close[i] < df$adj_close[i + 1]) {
df$Score[i] <- 1
}
}
View(df)
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
install.packages("randomForest")
library(randomForest)
getParamSet("classif.randomForest")
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
?tuneParams
install.packages("classif.ksvm")
install.packages("kernlab")
getParamSet("classif.ksvm")
?makeNumericLearnerParam
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
source('C:/Users/erudi/PycharmProjects/stock-evaluator/r/mlr_compile.R', echo=TRUE)
